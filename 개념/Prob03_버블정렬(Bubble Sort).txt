※ 버블정렬(Bubble Sort)
선택정렬과 마찬가지로 직관적인 해결 방법.
바로 가까이에 있는 두 숫자끼리 비교를 해서 당장 더 작은 숫자를 앞으로 보내주기 반복.
정렬 알고리즘 중에서 구현은 가장 쉽지만 가장 비효율적인 알고리즘.

『옆에 있는 값과 비교해서 더 작은 값을 앞으로 보내기』

1 10 5 8 7 6 4 3 2 9 -- ①
-----
1 10 5 8 7 6 4 3 2 9 -- ②
  -----
1 5 10 8 7 6 4 3 2 9 -- ③
     -----
1 5 8 10 7 6 4 3 2 9 -- ④
        ----
1 5 8 7 10 6 4 3 2 9 -- ⑤
          -----
1 5 8 7 6 10 4 3 2 9 -- ⑥ 
             -----
1 5 8 7 6 4 10 3 2 9 -- ⑦
                -----
1 5 8 7 6 4 3 10 2 9 -- ⑧
                  -----
1 5 8 7 6 4 3 2 10 9 -- ⑨
                     -----
1 5 8 7 6 4 3 2 9 10 -- ⑩

     :
----> 한 번의 반복이 끝났을 때 가장 큰 값이 맨 뒤로 보내지는 방식
다시 정렬하기 위해서는 가장 맨 뒤에 큰 값을 제외한 채 다시 버블 정렬을 시작한다.


10 + 9 + 8 + 7 + ... + 1

=> 등차수열
=> N*(N + 1) / 2
=> 빅-O 표기법을 통해 O(N*N)
=> O(N²)

=> 선택정렬과 동일한 시간 복잡도를 가지고 있다.
하지만 실제로 작동시키면 선택정렬보다 훨씬 느리게 작동한다.
왜냐하면 버블정렬은 당장 옆에 있는 것과 비교를 하여 계속 자리를 바꾸는 연산을 수행

선택정렬은 가장 작은 수를 골라서 마지막에만 교체를 해주지만
버블정렬은 매번 교체를 해주므로 비효율적이다.

시간 복잡도는 같지만 실제 수행시간은 선택정렬보다 버블정렬이 훨씬 느리다.
정렬 중에서 가장 느리다~!!